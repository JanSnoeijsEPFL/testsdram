#ifndef _ALTERA_HPS_0_BRIDGES_H_
#define _ALTERA_HPS_0_BRIDGES_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'base_hps' in
 * file 'base_hps.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0_bridges' and devices
 * connected to the following masters:
 *   axi_f2h
 *   h2f
 *   h2f_lw
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'accelerator_0_w_ocram', class 'accelerator'
 * The macros are prefixed with 'ACCELERATOR_0_W_OCRAM_'.
 * The prefix is the slave descriptor.
 */
#define ACCELERATOR_0_W_OCRAM_COMPONENT_TYPE accelerator
#define ACCELERATOR_0_W_OCRAM_COMPONENT_NAME accelerator_0
#define ACCELERATOR_0_W_OCRAM_BASE 0x0
#define ACCELERATOR_0_W_OCRAM_SPAN 524288
#define ACCELERATOR_0_W_OCRAM_END 0x7ffff

/*
 * Macros for device 'jtag_uart_0', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_0_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_0_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_0_COMPONENT_NAME jtag_uart_0
#define JTAG_UART_0_BASE 0x0
#define JTAG_UART_0_SPAN 8
#define JTAG_UART_0_END 0x7
#define JTAG_UART_0_READ_DEPTH 64
#define JTAG_UART_0_READ_THRESHOLD 8
#define JTAG_UART_0_WRITE_DEPTH 64
#define JTAG_UART_0_WRITE_THRESHOLD 8

/*
 * Macros for device 'accelerator_0_u_ocram', class 'accelerator'
 * The macros are prefixed with 'ACCELERATOR_0_U_OCRAM_'.
 * The prefix is the slave descriptor.
 */
#define ACCELERATOR_0_U_OCRAM_COMPONENT_TYPE accelerator
#define ACCELERATOR_0_U_OCRAM_COMPONENT_NAME accelerator_0
#define ACCELERATOR_0_U_OCRAM_BASE 0x80000
#define ACCELERATOR_0_U_OCRAM_SPAN 65536
#define ACCELERATOR_0_U_OCRAM_END 0x8ffff

/*
 * Macros for device 'accelerator_0_x_ocram', class 'accelerator'
 * The macros are prefixed with 'ACCELERATOR_0_X_OCRAM_'.
 * The prefix is the slave descriptor.
 */
#define ACCELERATOR_0_X_OCRAM_COMPONENT_TYPE accelerator
#define ACCELERATOR_0_X_OCRAM_COMPONENT_NAME accelerator_0
#define ACCELERATOR_0_X_OCRAM_BASE 0x90000
#define ACCELERATOR_0_X_OCRAM_SPAN 8192
#define ACCELERATOR_0_X_OCRAM_END 0x91fff

/*
 * Macros for device 'accelerator_0_avalon_slave', class 'accelerator'
 * The macros are prefixed with 'ACCELERATOR_0_AVALON_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define ACCELERATOR_0_AVALON_SLAVE_COMPONENT_TYPE accelerator
#define ACCELERATOR_0_AVALON_SLAVE_COMPONENT_NAME accelerator_0
#define ACCELERATOR_0_AVALON_SLAVE_BASE 0x92000
#define ACCELERATOR_0_AVALON_SLAVE_SPAN 32
#define ACCELERATOR_0_AVALON_SLAVE_END 0x9201f

/*
 * Macros for device 'pio_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_0_'.
 * The prefix is the slave descriptor.
 */
#define PIO_0_COMPONENT_TYPE altera_avalon_pio
#define PIO_0_COMPONENT_NAME pio_0
#define PIO_0_BASE 0x92020
#define PIO_0_SPAN 16
#define PIO_0_END 0x9202f
#define PIO_0_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_0_CAPTURE 0
#define PIO_0_DATA_WIDTH 8
#define PIO_0_DO_TEST_BENCH_WIRING 0
#define PIO_0_DRIVEN_SIM_VALUE 0
#define PIO_0_EDGE_TYPE NONE
#define PIO_0_FREQ 100000000
#define PIO_0_HAS_IN 0
#define PIO_0_HAS_OUT 1
#define PIO_0_HAS_TRI 0
#define PIO_0_IRQ_TYPE NONE
#define PIO_0_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_BRIDGES_H_ */
